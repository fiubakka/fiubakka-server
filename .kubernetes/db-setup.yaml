apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
data:
  akka.sql: |
    CREATE DATABASE akka;

    CREATE USER akka WITH PASSWORD 'akka';
    GRANT ALL PRIVILEGES ON DATABASE akka TO akka;

    \c akka;

    CREATE SCHEMA akka;

    GRANT USAGE, CREATE ON SCHEMA akka TO akka;
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA akka TO akka;
    GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA akka TO akka;

  durable_state.sql: |
    CREATE SCHEMA IF NOT EXISTS akka;

    CREATE TABLE IF NOT EXISTS akka.durable_state (
        global_offset BIGSERIAL,
        persistence_id VARCHAR(255) NOT NULL,
        revision BIGINT NOT NULL,
        state_payload BYTEA NOT NULL,
        state_serial_id INTEGER NOT NULL,
        state_serial_manifest VARCHAR(255),
        tag VARCHAR,
        state_timestamp BIGINT NOT NULL,
        PRIMARY KEY(persistence_id)
        );
    CREATE INDEX CONCURRENTLY state_tag_idx on akka.durable_state (tag);
    CREATE INDEX CONCURRENTLY state_global_offset_idx on akka.durable_state (global_offset);

  players.sql: |
    CREATE TABLE IF NOT EXISTS akka.players (
      id BIGSERIAL PRIMARY KEY,
      username varchar(64) NOT NULL,
      password varchar(128) NOT NULL,
      CONSTRAINT unique_username_idx UNIQUE (username)
    );

---

apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-init-job
spec:
  template:
    spec:
      containers:
      - name: postgres-client
        image: bitnami/postgresql:15.5.0
        command: ["/bin/bash", "-c"]
        args: ["PGPASSWORD=postgres psql -U postgres -h fiubakka-postgres-postgresql.fiubakka-server-1.svc.cluster.local -f /var/lib/postgresql/data/akka.sql && \
                PGPASSWORD=akka psql -U akka -h fiubakka-postgres-postgresql.fiubakka-server-1.svc.cluster.local -f /var/lib/postgresql/data/durable_state.sql && \
                PGPASSWORD=akka psql -U akka -h fiubakka-postgres-postgresql.fiubakka-server-1.svc.cluster.local -f /var/lib/postgresql/data/players.sql"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: init-scripts
          mountPath: /var/lib/postgresql/data/
      restartPolicy: Never
      volumes:
      - name: init-scripts
        configMap:
          name: postgres-init-scripts
  backoffLimit: 4
