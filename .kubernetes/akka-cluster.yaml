apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fiubakka-server
  name: fiubakka-server
  namespace: fiubakka-server-1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fiubakka-server
  template:
    metadata:
      labels:
        app: fiubakka-server
    spec:
      containers:
      - name: fiubakka-server
        image: mrmarcosrolando/fiubakka-server:1.0
        volumeMounts: # Needed for AeronUDP
          - mountPath: /dev/shm
            name: dshm
        readinessProbe:
          httpGet:
            path: "/ready"
            port: management
          periodSeconds: 10
          failureThreshold: 10
          initialDelaySeconds: 20
        livenessProbe:
          httpGet:
            path: "/alive"
            port: management
          periodSeconds: 10
          failureThreshold: 10
          initialDelaySeconds: 20
        ports:
        - name: management
          containerPort: 8558
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: player-accepter
          containerPort: 2020
          protocol: TCP
        env:
        - name: ENV
          value: production
        - name: DB_HOST
          value: fiubakka-postgres-postgresql.fiubakka-server-1.svc.cluster.local:5432
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: fiubakka-kafka.fiubakka-server-1.svc.cluster.local:9092
        - name: KUBERNETES_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          # We don't set cpu limit because is not recommended in JVM
          # See https://doc.akka.io/docs/akka-management/current/kubernetes-deployment/preparing-for-production.html
          limits:
            memory: 1024Mi
          requests:
            cpu: 2
            memory: 1024Mi
      volumes:
        - name: dshm # Needed for AeronUDP
          emptyDir:
            medium: Memory
            sizeLimit: 4Gi

---
apiVersion: v1
kind: Service
metadata:
  name: fiubakka-server-service
  namespace: fiubakka-server-1
spec:
  type: LoadBalancer
  ports:
    - port: 2020
      targetPort: 2020
      protocol: TCP
  selector:
    app: fiubakka-server

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
  namespace: fiubakka-server-1
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: fiubakka-server-1
subjects:
- kind: User
  name: system:serviceaccount:fiubakka-server-1:default
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-patcher
  namespace: fiubakka-server-1
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: annotate-pods
  namespace: fiubakka-server-1
subjects:
  - kind: User
    name: system:serviceaccount:fiubakka-server-1:default
roleRef:
  kind: Role
  name: pod-patcher
  apiGroup: rbac.authorization.k8s.io
