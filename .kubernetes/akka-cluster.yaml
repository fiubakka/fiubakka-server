apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: game-system
  name: game-system
  namespace: game-system-1
spec:
  replicas: 4
  selector:
    matchLabels:
      app: game-system
  template:
    metadata:
      labels:
        app: game-system
    spec:
      containers:
      - name: game-system
        image: akka-backend-tp:1.0
        readinessProbe:
          httpGet:
            path: "/ready"
            port: management
          periodSeconds: 10
          failureThreshold: 10
          initialDelaySeconds: 20
        livenessProbe:
          httpGet:
            path: "/alive"
            port: management
          periodSeconds: 10
          failureThreshold: 10
          initialDelaySeconds: 20
        ports:
        - name: management
          containerPort: 8558
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: player-accepter
          containerPort: 9090
          protocol: TCP
        env:
        - name: KUBERNETES_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          # We don't set cpu limit because is not recommended in JVM
          # See https://doc.akka.io/docs/akka-management/current/kubernetes-deployment/preparing-for-production.html
          limits:
            memory: 1024Mi
          requests:
            cpu: 2
            memory: 1024Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: game-system-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: wurstmeister/zookeeper
        ports:
        - containerPort: 2181

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: game-system-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: INSIDE://kafka:9092,OUTSIDE://localhost:9092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        - name: KAFKA_LISTENERS
          value: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INSIDE
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181

---
apiVersion: v1
kind: Service
metadata:
  name: game-system-service
  namespace: game-system-1
spec:
  type: LoadBalancer
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
  selector:
    app: game-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
  namespace: game-system-1
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: game-system-1
subjects:
- kind: User
  name: system:serviceaccount:game-system-1:default
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-patcher
  namespace: game-system-1
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: annotate-pods
  namespace: game-system-1
subjects:
  - kind: User
    name: system:serviceaccount:game-system-1:default
roleRef:
  kind: Role
  name: pod-patcher
  apiGroup: rbac.authorization.k8s.io
